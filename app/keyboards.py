from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Tuple


def back_btn(target: str = "menu") -> InlineKeyboardButton:
    return InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back:{target}")


def main_menu_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üß¨ –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="gen:new")],
        [InlineKeyboardButton(text="ü§ñ –ê–≤—Ç–æ–ø–æ—Å—Ç", callback_data="custom:auto")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", callback_data="settings:open")],
        [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile:open")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help:open")],
    ])



def styles_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üé® –†–µ–∞–ª–∏–∑–º", callback_data="style:realism"),
            InlineKeyboardButton(text="üå∏ –ê–Ω–∏–º–µ", callback_data="style:anime"),
            InlineKeyboardButton(text="üß© –ú—É–ª—å—Ç", callback_data="style:cartoon"),
        ],
        [back_btn("menu")],
    ])


def prompt_editor_kb(gen_id: int | None = None) -> InlineKeyboardMarkup:
    rows = [
        [InlineKeyboardButton(text="‚úçÔ∏è –ü—Ä–∞–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º–ø—Ç", callback_data="editor:edit_main")],
        [InlineKeyboardButton(text="üõ† –ü—Ä–∞–≤–∏—Ç—å SD-–ø—Ä–æ–º–ø—Ç", callback_data="editor:edit_sd")],
        [InlineKeyboardButton(text="üö´ –ü—Ä–∞–≤–∏—Ç—å Negative", callback_data="editor:edit_negative")],
        [InlineKeyboardButton(text="‚ñ∂Ô∏è –í—ã–±—Ä–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–ì–µ–Ω–µ—Ä–∞—Ü–∏—è)", callback_data="count:open")],
        [back_btn("styles")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)


def gen_confirm_kb(gen_id: int, credits: float) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f"üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å (‚âà {credits:.2f} cr)", callback_data=f"img:run:{gen_id}")],
        [back_btn("editor")]
    ])


def image_actions_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ DeviantArt", callback_data="da:publish")],
        [back_btn("editor")]
    ])


def profile_kb(da_ok: bool = False, ta_ok: bool = False) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è —Å —É—á—ë—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π.
    - DeviantArt: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ü–æ–¥–∫–ª—é—á–∏—Ç—å/–û—Ç–∫–ª—é—á–∏—Ç—å.
    - Tensor.Art: –ø–æ–∫–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è; –µ—Å–ª–∏ —É–∂–µ –ø–æ–¥–∫–ª—é—á—ë–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –û—Ç–∫–ª—é—á–∏—Ç—å.
    """
    rows = []

    # Tensor.Art
    if ta_ok:
        rows.append([InlineKeyboardButton(text="üîå –û—Ç–∫–ª—é—á–∏—Ç—å Tensor.Art", callback_data="profile:disconnect_ta")])
    else:
        rows.append([InlineKeyboardButton(text="üß™ –î–æ–±–∞–≤–∏—Ç—å Tensor.Art", callback_data="profile:add_tensorart")])

    # DeviantArt
    if da_ok:
        rows.append([InlineKeyboardButton(text="üîå –û—Ç–∫–ª—é—á–∏—Ç—å DeviantArt", callback_data="profile:disconnect_da")])
    else:
        rows.append([InlineKeyboardButton(text="üñº –ü–æ–¥–∫–ª—é—á–∏—Ç—å DeviantArt", callback_data="profile:connect_da")])

    # –ü—Ä–æ—á–µ–µ
    rows.append([InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", callback_data="settings:open")])
    rows.append([back_btn("menu")])

    return InlineKeyboardMarkup(inline_keyboard=rows)


# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (—É—Ä–µ–∑–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä) ===

def settings_main_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìê –†–∞–∑–º–µ—Ä", callback_data="settings:size")],
        [InlineKeyboardButton(text="üß≠ Steps (‚â§20)", callback_data="settings:steps")],
        [InlineKeyboardButton(text="üéö CFG Scale (‚â§10)", callback_data="settings:cfg")],
        [back_btn("menu")],
    ])


def gallery_page_kb(items: List[Tuple[str, str, bool]], offset: int, limit: int, has_more: bool) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–∞–ª–µ—Ä–µ–π.
    items: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (folderid, name, –≤—ã–±—Ä–∞–Ω_–∏–ª–∏_–Ω–µ—Ç)
    """
    rows: List[List[InlineKeyboardButton]] = []
    for fid, name, selected in items:
        mark = "‚úÖ " if selected else "‚¨úÔ∏è "
        rows.append([InlineKeyboardButton(text=mark + name, callback_data=f"da:toggle:{fid}")])

    nav: List[InlineKeyboardButton] = []
    if offset > 0:
        prev_offset = max(0, offset - limit)
        nav.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"da:page:{prev_offset}"))
    if has_more:
        next_offset = offset + limit
        nav.append(InlineKeyboardButton("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è", callback_data=f"da:page:{next_offset}"))
    if nav:
        rows.append(nav)

    rows.append([
        InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="da:save"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="da:cancel_pick"),
    ])

    return InlineKeyboardMarkup(inline_keyboard=rows)

def sizes_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="768√ó1152", callback_data="size:768x1152"),
            InlineKeyboardButton(text="1024√ó1024", callback_data="size:1024x1024"),
        ],
        [back_btn("settings")]
    ])


def steps_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="8", callback_data="steps:8"),
            InlineKeyboardButton(text="12", callback_data="steps:12"),
            InlineKeyboardButton(text="16", callback_data="steps:16"),
            InlineKeyboardButton(text="20", callback_data="steps:20"),
        ],
        [back_btn("settings")]
    ])


def cfg_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="3.0", callback_data="cfg:3"),
            InlineKeyboardButton(text="5.0", callback_data="cfg:5"),
            InlineKeyboardButton(text="7.0", callback_data="cfg:7"),
            InlineKeyboardButton(text="10.0", callback_data="cfg:10"),
        ],
        [back_btn("settings")]
    ])


def models_kb(models: list[tuple[str, str]], selected_id: str | None) -> InlineKeyboardMarkup:
    rows = []
    for mid, name in models:
        mark = "‚úÖ " if selected_id == mid else ""
        rows.append([InlineKeyboardButton(text=f"{mark}{name}", callback_data=f"model:pick:{mid}")])
    rows.append([InlineKeyboardButton(text="‚û°Ô∏è –î–∞–ª–µ–µ", callback_data="lora:open")])
    rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:editor")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def loras_kb(loras: list[tuple[str, str]], selected_ids: set[str]) -> InlineKeyboardMarkup:
    rows = []
    for lid, name in loras:
        mark = "‚úÖ " if lid in selected_ids else ""
        rows.append([InlineKeyboardButton(text=f"{mark}{name}", callback_data=f"lora:toggle:{lid}")])
    rows.append([
        InlineKeyboardButton(text="‚û°Ô∏è –î–∞–ª–µ–µ", callback_data="count:open"),
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="model:open"),
    ])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def count_kb(current: int | None = None) -> InlineKeyboardMarkup:
    rows = [[
        InlineKeyboardButton(text=("‚úÖ 1" if current == 1 else "1"), callback_data="count:pick:1"),
        InlineKeyboardButton(text=("‚úÖ 2" if current == 2 else "2"), callback_data="count:pick:2"),
        InlineKeyboardButton(text=("‚úÖ 3" if current == 3 else "3"), callback_data="count:pick:3"),
        InlineKeyboardButton(text=("‚úÖ 4" if current == 4 else "4"), callback_data="count:pick:4"),
    ]]
    # –í–æ–∑–≤—Ä–∞—Ç –∏–∑ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ ‚Äî –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä
    rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:editor")])
    return InlineKeyboardMarkup(inline_keyboard=rows)
